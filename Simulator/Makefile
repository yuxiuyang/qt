#############################################################################
# Makefile for building: Simulator
# Generated by qmake (2.01a) (Qt 4.6.2) on: Tue Apr 15 13:41:30 2014
# Project:  Simulator.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile Simulator.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I../thread_task -I. -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/lib -L../thread_task/Debug -lthread_task -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		mgrdev.cpp \
		basicmgr.cpp \
		spo2mgr.cpp \
		spo2window.cpp \
		file.cpp \
		queue.cpp \
		netdev.cpp \
		network.cpp \
		nibpwindow.cpp \
		nibpmgr.cpp \
		ecgwindow.cpp \
		datadev.cpp \
		datamgr.cpp moc_mainwindow.cpp \
		moc_mgrdev.cpp \
		moc_spo2window.cpp \
		moc_nibpwindow.cpp \
		moc_ecgwindow.cpp \
		moc_datadev.cpp
OBJECTS       = main.o \
		mainwindow.o \
		mgrdev.o \
		basicmgr.o \
		spo2mgr.o \
		spo2window.o \
		file.o \
		queue.o \
		netdev.o \
		network.o \
		nibpwindow.o \
		nibpmgr.o \
		ecgwindow.o \
		datadev.o \
		datamgr.o \
		moc_mainwindow.o \
		moc_mgrdev.o \
		moc_spo2window.o \
		moc_nibpwindow.o \
		moc_ecgwindow.o \
		moc_datadev.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		Simulator.pro
QMAKE_TARGET  = Simulator
DESTDIR       = 
TARGET        = Simulator

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainwindow.h ui_spo2window.h ui_nibpwindow.h ui_ecgwindow.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: Simulator.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile Simulator.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile Simulator.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/Simulator1.0.0 || $(MKDIR) .tmp/Simulator1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/Simulator1.0.0/ && $(COPY_FILE) --parents mainwindow.h mgrdev.h basicmgr.h spo2mgr.h spo2window.h file.h queue.h netdev.h network.h ../include/link.h ../include/define.h nibpwindow.h nibpmgr.h ecgwindow.h datadev.h datamgr.h .tmp/Simulator1.0.0/ && $(COPY_FILE) --parents main.cpp mainwindow.cpp mgrdev.cpp basicmgr.cpp spo2mgr.cpp spo2window.cpp file.cpp queue.cpp netdev.cpp network.cpp nibpwindow.cpp nibpmgr.cpp ecgwindow.cpp datadev.cpp datamgr.cpp .tmp/Simulator1.0.0/ && $(COPY_FILE) --parents mainwindow.ui spo2window.ui nibpwindow.ui ecgwindow.ui .tmp/Simulator1.0.0/ && (cd `dirname .tmp/Simulator1.0.0` && $(TAR) Simulator1.0.0.tar Simulator1.0.0 && $(COMPRESS) Simulator1.0.0.tar) && $(MOVE) `dirname .tmp/Simulator1.0.0`/Simulator1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/Simulator1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_mgrdev.cpp moc_spo2window.cpp moc_nibpwindow.cpp moc_ecgwindow.cpp moc_datadev.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_mgrdev.cpp moc_spo2window.cpp moc_nibpwindow.cpp moc_ecgwindow.cpp moc_datadev.cpp
moc_mainwindow.cpp: mgrdev.h \
		spo2window.h \
		spo2mgr.h \
		basicmgr.h \
		../include/define.h \
		queue.h \
		file.h \
		network.h \
		netdev.h \
		nibpwindow.h \
		nibpmgr.h \
		mainwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_mgrdev.cpp: mgrdev.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mgrdev.h -o moc_mgrdev.cpp

moc_spo2window.cpp: spo2mgr.h \
		basicmgr.h \
		../include/define.h \
		queue.h \
		file.h \
		network.h \
		netdev.h \
		spo2window.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) spo2window.h -o moc_spo2window.cpp

moc_nibpwindow.cpp: nibpmgr.h \
		basicmgr.h \
		../include/define.h \
		queue.h \
		file.h \
		network.h \
		netdev.h \
		nibpwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) nibpwindow.h -o moc_nibpwindow.cpp

moc_ecgwindow.cpp: ecgwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) ecgwindow.h -o moc_ecgwindow.cpp

moc_datadev.cpp: ../include/define.h \
		datamgr.h \
		datadev.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) datadev.h -o moc_datadev.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h ui_spo2window.h ui_nibpwindow.h ui_ecgwindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h ui_spo2window.h ui_nibpwindow.h ui_ecgwindow.h
ui_mainwindow.h: mainwindow.ui
	/usr/bin/uic-qt4 mainwindow.ui -o ui_mainwindow.h

ui_spo2window.h: spo2window.ui
	/usr/bin/uic-qt4 spo2window.ui -o ui_spo2window.h

ui_nibpwindow.h: nibpwindow.ui
	/usr/bin/uic-qt4 nibpwindow.ui -o ui_nibpwindow.h

ui_ecgwindow.h: ecgwindow.ui
	/usr/bin/uic-qt4 ecgwindow.ui -o ui_ecgwindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

main.o: main.cpp mainwindow.h \
		mgrdev.h \
		spo2window.h \
		spo2mgr.h \
		basicmgr.h \
		../include/define.h \
		queue.h \
		file.h \
		network.h \
		netdev.h \
		nibpwindow.h \
		nibpmgr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		mgrdev.h \
		spo2window.h \
		spo2mgr.h \
		basicmgr.h \
		../include/define.h \
		queue.h \
		file.h \
		network.h \
		netdev.h \
		nibpwindow.h \
		nibpmgr.h \
		ui_mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

mgrdev.o: mgrdev.cpp mgrdev.h \
		basicmgr.h \
		../include/define.h \
		queue.h \
		file.h \
		network.h \
		netdev.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mgrdev.o mgrdev.cpp

basicmgr.o: basicmgr.cpp basicmgr.h \
		../include/define.h \
		queue.h \
		file.h \
		network.h \
		netdev.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o basicmgr.o basicmgr.cpp

spo2mgr.o: spo2mgr.cpp spo2mgr.h \
		basicmgr.h \
		../include/define.h \
		queue.h \
		file.h \
		network.h \
		netdev.h \
		mgrdev.h \
		spo2window.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o spo2mgr.o spo2mgr.cpp

spo2window.o: spo2window.cpp spo2window.h \
		spo2mgr.h \
		basicmgr.h \
		../include/define.h \
		queue.h \
		file.h \
		network.h \
		netdev.h \
		ui_spo2window.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o spo2window.o spo2window.cpp

file.o: file.cpp file.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o file.o file.cpp

queue.o: queue.cpp queue.h \
		../include/define.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o queue.o queue.cpp

netdev.o: netdev.cpp netdev.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o netdev.o netdev.cpp

network.o: network.cpp network.h \
		netdev.h \
		../include/define.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o network.o network.cpp

nibpwindow.o: nibpwindow.cpp nibpwindow.h \
		nibpmgr.h \
		basicmgr.h \
		../include/define.h \
		queue.h \
		file.h \
		network.h \
		netdev.h \
		ui_nibpwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o nibpwindow.o nibpwindow.cpp

nibpmgr.o: nibpmgr.cpp nibpmgr.h \
		basicmgr.h \
		../include/define.h \
		queue.h \
		file.h \
		network.h \
		netdev.h \
		mgrdev.h \
		nibpwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o nibpmgr.o nibpmgr.cpp

ecgwindow.o: ecgwindow.cpp ecgwindow.h \
		ui_ecgwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ecgwindow.o ecgwindow.cpp

datadev.o: datadev.cpp datadev.h \
		../include/define.h \
		datamgr.h \
		netdev.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o datadev.o datadev.cpp

datamgr.o: datamgr.cpp datamgr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o datamgr.o datamgr.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_mgrdev.o: moc_mgrdev.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mgrdev.o moc_mgrdev.cpp

moc_spo2window.o: moc_spo2window.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_spo2window.o moc_spo2window.cpp

moc_nibpwindow.o: moc_nibpwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_nibpwindow.o moc_nibpwindow.cpp

moc_ecgwindow.o: moc_ecgwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_ecgwindow.o moc_ecgwindow.cpp

moc_datadev.o: moc_datadev.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_datadev.o moc_datadev.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

